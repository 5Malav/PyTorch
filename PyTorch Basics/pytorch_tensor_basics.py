# -*- coding: utf-8 -*-
"""Pytorch Tensor Basics.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/16JkAP7-Bdy2NmntKJy8veFCrAEO1clOe

# Tensor - Basic Part - 1
"""

import torch
import numpy as np

torch.__version__

"""
Tensor:-

A tensor is a multidimensional matrix containing elements
of a single data type.

"""

arr=np.array([1,2,3,4,5])
print(arr)

arr.dtype

type(arr)

#convert numpy array to tensor

x=torch.from_numpy(arr)
x

type(torch.from_numpy(arr))

x.dtype

torch.as_tensor(arr)

# 2D numpy array

arr2d=np.arange(0.0,12.0)
arr2d

arr2d=arr2d.reshape(4,3)
arr2d

x2=torch.from_numpy(arr2d)
x2

arr

x

arr[0]=99
arr

x

# So numpy creates a link between an array and tensor

# but we may not want sometimes.

# we want Numpy array to be manipulated but not affecting
# tensor

# so we need to do copy to avoid this.

# we can use .tensor to create a copy of Numpy array

arr_1=np.arange(0,10)
arr_1

my_tns=torch.tensor(arr_1)
my_tns

my_tns_1=torch.from_numpy(arr_1)
my_tns_1

arr_1[0]=88
arr_1

my_tns

my_tns_1

"""# Tensor Basic Part - 2

How to create tensors from scratch completely using PyTorch
"""

new_arr= np.array([1,2,3])
new_arr

new_arr.dtype

torch.tensor(new_arr)

my_tensor=torch.Tensor(new_arr)
my_tensor

# Tensor is used for float data type

my_tensor.dtype

"""
 Instead of creating tensor from  numpy array create tensor
 from scratch.

"""

torch.empty(2,2)

torch.zeros(4,3,dtype=torch.int32)

torch.zeros(4,3,dtype=torch.int64)

torch.ones(4,3)

torch.arange(0,18,2)

torch.arange(0,18,2).reshape(3,3)

torch.linspace(0,18,12)

torch.linspace(0,18,12).reshape(3,4)

torch.tensor([1,2,3])

my_tensor=torch.tensor([1,2,3])
my_tensor

my_tensor.dtype

my_tensor.type(torch.int32)

#change datatype of tensor

my_tensor=my_tensor.type(torch.int32)
my_tensor.dtype

#creating tensor from random numbers

torch.rand(4,3)

torch.rand(10)

torch.randn(10)

torch.randn(4,3)

torch.randint(low=0,high=10,size=(5,5))

# low inclusive and high exclusive

x = torch.zeros(2,5)
x

x.shape

torch.rand_like(x)
# will take shape of x

torch.randn_like(x)

torch.randint_like(x,low=0,high=10)

torch.manual_seed(42)

torch.rand(2,3)

#torch. rand should be in same cell with manual_seed